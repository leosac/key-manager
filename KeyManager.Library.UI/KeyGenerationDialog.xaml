<UserControl x:Class="Leosac.KeyManager.Library.UI.KeyGenerationDialog"
             x:Name="userControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Leosac.KeyManager.Library.UI"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
              MinWidth="500">
    <UserControl.Resources>
        <s:Boolean x:Key="True">True</s:Boolean>
        <s:Boolean x:Key="False">False</s:Boolean>
    </UserControl.Resources>
    <Grid>
        <DockPanel LastChildFill="True">
            <TextBlock DockPanel.Dock="Top" Text="Local Key Generation" FontSize="18" Margin="8" />
            <StackPanel DockPanel.Dock="Top" Orientation="Vertical" Margin="5">
                <local:NumericUpDownControl Hint="Length" HelperText="Key Length" MinValue="8" CurrentValue="{Binding KeySize, ElementName=userControl, Mode=TwoWay}" Margin="8" />
                <PasswordBox Margin="5"
                     materialDesign:HintAssist.HelperText="The secret value for the key"
                     materialDesign:HintAssist.Hint="Key Value"
                     materialDesign:TextFieldAssist.HasClearButton="True"
                     materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
                     Style="{StaticResource MaterialDesignFloatingHintRevealPasswordBox}"
                     materialDesign:PasswordBoxAssist.Password="{Binding Path=KeyValue, ElementName=userControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}" />
            </StackPanel>
            <WrapPanel DockPanel.Dock="Bottom" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,5,5,5">
                <Button Width="100" IsDefault="True" Content="Close" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="15,0,0,0"/>
            </WrapPanel>
            <TabControl TabStripPlacement="Left">
                <TabItem Header="Random">
                    <Grid>
                        <Button x:Name="btnRandom" Content="Generate Random Key" HorizontalAlignment="Center" VerticalAlignment="Center" Click="btnRandom_Click"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Password">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Derivate a Key from a Password (using RFC 2898)" Margin="10"/>
                        <TextBox x:Name="tbxSalt" Grid.Row="1" Margin="10"
                                 materialDesign:HintAssist.HelperText="The salt to use for key derivation"
                                 materialDesign:HintAssist.Hint="Salt"
                                 Text="Security Freedom" />
                        <PasswordBox x:Name="tbxPassword" Grid.Row="2" Margin="10"
                                 materialDesign:HintAssist.HelperText="The password to derivate the key from"
                                 materialDesign:HintAssist.Hint="Password"
                                 materialDesign:TextFieldAssist.HasClearButton="True"
                                 Style="{StaticResource MaterialDesignFloatingHintRevealPasswordBox}" />
                        <Button x:Name="btnPassword" Grid.Row="3" Content="Create" Width="150" Click="btnPassword_Click" Margin="10" />
                    </Grid>
                </TabItem>
                <TabItem Header="Key Ceremony">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Run a Key Ceremony to recover a key value shared between several individuals." Margin="10"/>
                        <local:NumericUpDownControl Grid.Row="1" Hint="Fragments" HelperText="Number of key fragments to use during the ceremony" HorizontalAlignment="Stretch" MaxValue="255" MinValue="2" CurrentValue="{Binding Fragments, Mode=TwoWay, ElementName=userControl}" VerticalAlignment="Center" Margin="10"/>
                        <ComboBox Grid.Row="2" Margin="10"
                          ItemsSource="{Binding CeremonyTypes, ElementName=userControl}"
                          SelectedItem="{Binding SelectedCeremonyType, ElementName=userControl}"
                          materialDesign:HintAssist.HelperText="Ceremony Type"
                          materialDesign:HintAssist.Hint="Type" />
                        <Button x:Name="btnCeremony" Grid.Row="3" Content="Start the Ceremony" Width="200" Margin="10" Click="btnCeremony_Click" />
                    </Grid>
                </TabItem>
            </TabControl>
        </DockPanel>
    </Grid>
</UserControl>
