<UserControl x:Class="Leosac.KeyManager.Library.UI.SymmetricKeyGenerationDialog"
             x:Name="userControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:domain="clr-namespace:Leosac.KeyManager.Library.UI.Domain"
             xmlns:local="clr-namespace:Leosac.KeyManager.Library.UI"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:properties="clr-namespace:Leosac.KeyManager.Library.UI.Properties"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             MinWidth="500" MaxWidth="800">
    <UserControl.Resources>
        <s:Boolean x:Key="True">True</s:Boolean>
        <s:Boolean x:Key="False">False</s:Boolean>
    </UserControl.Resources>
    <Grid>
        <DockPanel LastChildFill="True">
            <TextBlock DockPanel.Dock="Top" Text="{x:Static properties:Resources.KeyGeneration}" FontSize="18" Margin="8" />
            <StackPanel DockPanel.Dock="Top" Orientation="Vertical" Margin="5">
                <local:NumericUpDownControl Hint="{x:Static properties:Resources.KeySize}" HelperText="{x:Static properties:Resources.KeySizeHelper}" MinValue="8" CurrentValue="{Binding KeySize, ElementName=userControl, Mode=TwoWay}" Margin="8" />
                <PasswordBox Margin="5"
                     materialDesign:HintAssist.HelperText="{x:Static properties:Resources.KeyValueHelper}"
                     materialDesign:HintAssist.Hint="{x:Static properties:Resources.KeyValue}"
                     materialDesign:TextFieldAssist.HasClearButton="True"
                     materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
                     Style="{StaticResource MaterialDesignFloatingHintRevealPasswordBox}"
                     materialDesign:PasswordBoxAssist.Password="{Binding Path=KeyValue, ElementName=userControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}" />
            </StackPanel>
            <WrapPanel DockPanel.Dock="Bottom" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,5,5,5">
                <Button Width="100" IsDefault="True" Content="{x:Static properties:Resources.Close}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="15,0,0,0"/>
            </WrapPanel>
            <TabControl TabStripPlacement="Left" Margin="5,15,5,5">
                <TabItem Header="{x:Static properties:Resources.Random}">
                    <Grid>
                        <Button x:Name="btnRandom" Content="{x:Static properties:Resources.GenerateRandom}" HorizontalAlignment="Center" VerticalAlignment="Center" Click="btnRandom_Click"/>
                    </Grid>
                </TabItem>
                <TabItem Header="{x:Static properties:Resources.Password}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="{x:Static properties:Resources.DerivatePassword}" Margin="10"/>
                        <TextBox x:Name="tbxSalt" Grid.Row="1" Margin="10"
                                 materialDesign:HintAssist.HelperText="{x:Static properties:Resources.SaltDivHelper}"
                                 materialDesign:HintAssist.Hint="{x:Static properties:Resources.Salt}"
                                 Text="Security Freedom" />
                        <PasswordBox x:Name="tbxPassword" Grid.Row="2" Margin="10"
                                 materialDesign:HintAssist.HelperText="{x:Static properties:Resources.PasswordDivHelper}"
                                 materialDesign:HintAssist.Hint="{x:Static properties:Resources.Password}"
                                 materialDesign:TextFieldAssist.HasClearButton="True"
                                 Style="{StaticResource MaterialDesignFloatingHintRevealPasswordBox}" />
                        <Button x:Name="btnPassword" Grid.Row="3" Content="{x:Static properties:Resources.Create}" Width="150" Click="btnPassword_Click" Margin="10" />
                    </Grid>
                </TabItem>
                <TabItem Header="{x:Static properties:Resources.Mnemonic}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <DockPanel LastChildFill="True">
                            <ComboBox DockPanel.Dock="Right" ItemsSource="{Binding MnemonicLanguages, ElementName=userControl}"
                                      SelectedItem="{Binding SelectedMnemonicLanguage, ElementName=userControl}"
                                      materialDesign:HintAssist.HelperText="{x:Static properties:Resources.WordsLanguageHelper}"
                                      materialDesign:HintAssist.Hint="{x:Static properties:Resources.WordsLanguage}" Margin="10" />
                            <TextBlock Grid.Row="0" Text="{x:Static properties:Resources.MnemonicHelper}" Margin="10"/>
                        </DockPanel>
                        <DockPanel Grid.Row="1" LastChildFill="True">
                            <WrapPanel DockPanel.Dock="Right" VerticalAlignment="Center">
                                <Button x:Name="btnGenerateMnemonic" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" Click="btnGenerateMnemonic_Click" Width="24" Height="24" ToolTip="{x:Static properties:Resources.GenerateWords}" Margin="3">
                                    <materialDesign:PackIcon Kind="ShuffleVariant" Height="16" Width="16"/>
                                </Button>
                                <Button x:Name="btnCopyMnemonic" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" Click="btnCopyMnemonic_Click" Width="24" Height="24" ToolTip="{x:Static properties:Resources.CopyWords}" Margin="3">
                                    <materialDesign:PackIcon Kind="ContentCopy" Height="16" Width="16"/>
                                </Button>
                            </WrapPanel>
                            <StackPanel Orientation="Vertical"
                                        materialDesign:HintAssist.HelperText="{x:Static properties:Resources.WordsHelper}"
                                        materialDesign:HintAssist.Hint="{x:Static properties:Resources.Words}" Margin="10">
                                <ListBox x:Name="lbWords" ItemsSource="{Binding MnemonicWords, ElementName=userControl}">
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel IsItemsHost="True" Orientation="Horizontal"></WrapPanel>
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <materialDesign:Chip Content="{Binding}"
                                                                 IsDeletable="True"
                                                                 DeleteClick="RemoveWordClick"
                                                                 Margin="0 0 4 4" />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <TextBox x:Name="tbxNewWord" TextChanged="tbxNewWord_TextChanged" KeyDown="tbxNewWord_KeyDown" />
                            </StackPanel>
                        </DockPanel>
                        <PasswordBox x:Name="tbxMnemonicPassphrase" Grid.Row="2" Margin="10"
                                 materialDesign:HintAssist.HelperText="{x:Static properties:Resources.PassphraseHelper}"
                                 materialDesign:HintAssist.Hint="{x:Static properties:Resources.Passphrase}"
                                 materialDesign:TextFieldAssist.HasClearButton="True"
                                 Style="{StaticResource MaterialDesignFloatingHintRevealPasswordBox}" />
                        <Button Grid.Row="3" x:Name="btnImportMnemonic" Content="{x:Static properties:Resources.Create}" Width="150" Click="btnImportMnemonic_Click" Margin="10" />
                    </Grid>
                </TabItem>
                <TabItem Header="{x:Static properties:Resources.KeyCeremony}">
                    <local:KeyCeremonySetupControl KeyValue="{Binding Path=KeyValue, Mode=TwoWay, ElementName=userControl}"/>
                </TabItem>
            </TabControl>
        </DockPanel>
    </Grid>
</UserControl>
