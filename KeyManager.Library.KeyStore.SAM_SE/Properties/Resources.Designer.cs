//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Leosac.KeyManager.Library.KeyStore.SAM_SE.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Leosac.KeyManager.Library.KeyStore.SAM_SE.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AID can&apos;t store this value.
        /// </summary>
        public static string AidNotValid {
            get {
                return ResourceManager.GetString("AidNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AID is not filled in.
        /// </summary>
        public static string AidWarningMissing {
            get {
                return ResourceManager.GetString("AidWarningMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AID is not equal to length 6.
        /// </summary>
        public static string AidWarningWrongLength {
            get {
                return ResourceManager.GetString("AidWarningWrongLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The favourite SAM-SE is not connected.
        /// </summary>
        public static string FavoriteSAM_SEDisconnected {
            get {
                return ResourceManager.GetString("FavoriteSAM_SEDisconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key entry do not exists.
        /// </summary>
        public static string KeyStoreKeyEntryMissing {
            get {
                return ResourceManager.GetString("KeyStoreKeyEntryMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key entry type do not exists.
        /// </summary>
        public static string KeyStoreKeyEntryTypeMissing {
            get {
                return ResourceManager.GetString("KeyStoreKeyEntryTypeMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password is not valid.
        /// </summary>
        public static string KeyStorePasswordInvalid {
            get {
                return ResourceManager.GetString("KeyStorePasswordInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The two passwords are not matching.
        /// </summary>
        public static string KeyStorePasswordNotMatching {
            get {
                return ResourceManager.GetString("KeyStorePasswordNotMatching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing SAM-SE key store properties.
        /// </summary>
        public static string KeyStorePropertiesMissing {
            get {
                return ResourceManager.GetString("KeyStorePropertiesMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIFARE DESFire key : biometric configuration.
        /// </summary>
        public static string LabelBioa {
            get {
                return ResourceManager.GetString("LabelBioa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIFARE DESFire key : configuration.
        /// </summary>
        public static string LabelDfxa {
            get {
                return ResourceManager.GetString("LabelDfxa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SAM-SE authentication key.
        /// </summary>
        public static string LabelScp3 {
            get {
                return ResourceManager.GetString("LabelScp3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random UID key : configuration.
        /// </summary>
        public static string LabelUidx {
            get {
                return ResourceManager.GetString("LabelUidx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown object.
        /// </summary>
        public static string LabelUnknown {
            get {
                return ResourceManager.GetString("LabelUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default lock : keys and files are locked inside UTPs.
        /// </summary>
        public static string LockDefault {
            get {
                return ResourceManager.GetString("LockDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimal lock : only the secrets keys are locked.
        /// </summary>
        public static string LockKey {
            get {
                return ResourceManager.GetString("LockKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced lock : keys and files are locked inside UTPs and readonly by Secur&apos;Evolution.
        /// </summary>
        public static string LockReadOnly {
            get {
                return ResourceManager.GetString("LockReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password do not contains a digit.
        /// </summary>
        public static string PasswordErrorDigit {
            get {
                return ResourceManager.GetString("PasswordErrorDigit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password do not contains at least 8 characters.
        /// </summary>
        public static string PasswordErrorLength {
            get {
                return ResourceManager.GetString("PasswordErrorLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password do not contains a letter.
        /// </summary>
        public static string PasswordErrorLetter {
            get {
                return ResourceManager.GetString("PasswordErrorLetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No programming station is selected.
        /// </summary>
        public static string ProgrammingStationMissing {
            get {
                return ResourceManager.GetString("ProgrammingStationMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Communication with SAM-SE is bad.
        /// </summary>
        public static string SAM_SEErrorBadConditions {
            get {
                return ResourceManager.GetString("SAM_SEErrorBadConditions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SAM-SE action done.
        /// </summary>
        public static string SAM_SEErrorDone {
            get {
                return ResourceManager.GetString("SAM_SEErrorDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No SAM-SE is connected.
        /// </summary>
        public static string SAM_SEErrorNoSAM_SE {
            get {
                return ResourceManager.GetString("SAM_SEErrorNoSAM_SE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version of configuration file is not up to date.
        /// </summary>
        public static string SAM_SEErrorOldVersion {
            get {
                return ResourceManager.GetString("SAM_SEErrorOldVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SAM-SE generic error, a &apos;get_last_error&apos; should have been called.
        /// </summary>
        public static string SAM_SEErrorOnError {
            get {
                return ResourceManager.GetString("SAM_SEErrorOnError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected programming station seems disconnected.
        /// </summary>
        public static string SAM_SEErrorProbablyDisconnected {
            get {
                return ResourceManager.GetString("SAM_SEErrorProbablyDisconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SAM-SE function was incorrectly called.
        /// </summary>
        public static string SAM_SEErrorWrongArg {
            get {
                return ResourceManager.GetString("SAM_SEErrorWrongArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SAM-SE index do not exists.
        /// </summary>
        public static string SAM_SEErrorWrongIndex {
            get {
                return ResourceManager.GetString("SAM_SEErrorWrongIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SAM-SE context is corrupted.
        /// </summary>
        public static string SAM_SEErrorWrongPtr {
            get {
                return ResourceManager.GetString("SAM_SEErrorWrongPtr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Impossible to connect to SAM-SE using this password.
        /// </summary>
        public static string SAM_SEErrorWrongPwd {
            get {
                return ResourceManager.GetString("SAM_SEErrorWrongPwd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SAM-SE function size argument is wrong.
        /// </summary>
        public static string SAM_SEErrorWrongSize {
            get {
                return ResourceManager.GetString("SAM_SEErrorWrongSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SAM-SE Error is unknown : .
        /// </summary>
        public static string SAM_SEUnknownError {
            get {
                return ResourceManager.GetString("SAM_SEUnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SI cannot have an odd length.
        /// </summary>
        public static string SiNotValid {
            get {
                return ResourceManager.GetString("SiNotValid", resourceCulture);
            }
        }
    }
}
